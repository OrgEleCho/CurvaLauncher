using System;

namespace CurvaLauncher.Libraries.Securify.ShellLink.Flags
{
    // https://support.microsoft.com/en-us/help/134552/shortcut-key-for-shortcut-does-not-work
    // TL;DR only on the desktop, on the Start menu, or in the Windows\Start Menu\Programs folder.

    /// <summary>
    /// The HotKeyFlags structure specifies input generated by a combination of keyboard keys being pressed.
    /// </summary>
    public class HotKeyFlags
    {
        #region Constructor
        /// <summary>
        /// Constructor
        /// </summary>
        public HotKeyFlags() { }

        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="hotKeys">2 byte short containg the low &amp; high byte values</param>
        public HotKeyFlags(ushort hotKeys)
        {
            LowByte = (VirtualKeyCodes)(hotKeys & 0xFF);
            HighByte = (ModifierKeys)(hotKeys >> 8 & 0xFF);
        }

        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="lowByte">The low byte value</param>
        /// <param name="highByte">The high byte values</param>
        public HotKeyFlags(VirtualKeyCodes lowByte, ModifierKeys highByte)
        {
            LowByte = lowByte;
            HighByte = highByte;
        }
        #endregion // Constructor

        /// <summary>
        /// LowByte (1 byte): An 8-bit unsigned integer that specifies a virtual key code that corresponds 
        /// to a key on the keyboard.
        /// </summary>
        public VirtualKeyCodes LowByte { get; set; }

        /// <summary>
        /// HighByte (1 byte): An 8-bit unsigned integer that specifies bits that correspond to modifier 
        /// keys on the keyboard.
        /// </summary>
        public ModifierKeys HighByte { get; set; }

        /// <summary>
        /// The HotKey value as found in the ShellLink header
        /// </summary>
        public ushort HotKey => (ushort)((byte)HighByte << 8 | (byte)LowByte);
    }
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
    public enum VirtualKeyCodes : byte
    {
        Zero = 0x30,
        One = 0x31,
        Two = 0x32,
        Three = 0x33,
        Four = 0x34,
        Five = 0x35,
        Six = 0x36,
        Seven = 0x37,
        Eight = 0x38,
        Nine = 0x39,
        A = 0x41,
        B = 0x42,
        C = 0x43,
        D = 0x44,
        E = 0x45,
        F = 0x46,
        G = 0x47,
        H = 0x48,
        I = 0x49,
        J = 0x4A,
        K = 0x4B,
        L = 0x4C,
        M = 0x4D,
        N = 0x4E,
        O = 0x4F,
        P = 0x50,
        Q = 0x51,
        R = 0x52,
        S = 0x53,
        T = 0x54,
        U = 0x55,
        V = 0x56,
        W = 0x57,
        X = 0x58,
        Y = 0x59,
        Z = 0x5A,
        F1 = 0x70,
        F2 = 0x71,
        F3 = 0x72,
        F4 = 0x73,
        F5 = 0x74,
        F6 = 0x75,
        F7 = 0x76,
        F8 = 0x77,
        F9 = 0x78,
        F10 = 0x79,
        F11 = 0x7A,
        F12 = 0x7B,
        F13 = 0x7C,
        F14 = 0x7D,
        F15 = 0x7E,
        F16 = 0x7F,
        F17 = 0x80,
        F18 = 0x81,
        F19 = 0x82,
        F20 = 0x83,
        F21 = 0x84,
        F22 = 0x85,
        F23 = 0x86,
        F24 = 0x87,
        NumLock = 0x90,
        ScrollLock = 0x91,
    }
    [Flags]
    public enum ModifierKeys : byte
    {
        Shift = 0x01,
        Control = 0x02,
        Alt = 0x04,
    }
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
}
