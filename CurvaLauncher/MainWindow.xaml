<Window x:Class="CurvaLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CurvaLauncher" Background="Transparent"
        xmlns:hotkey="https://wpf.elecho.org/globalhotkey"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:data="clr-namespace:CurvaLauncher.Data;assembly=CurvaLauncher.Common"
        xmlns:utils="clr-namespace:CurvaLauncher.Utilities"
        xmlns:models="clr-namespace:CurvaLauncher.Models"
        xmlns:wpfproxy="clr-namespace:EleCho.WpfUtilities;assembly=EleCho.WpfUtilities.BindingProxy"
        xmlns:condition="clr-namespace:EleCho.WpfUtilities.ConditionControls;assembly=EleCho.WpfUtilities.ConditionControls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindow}" d:Width="800"
        Title="MainWindow" Height="Auto" Width="{Binding AppConfig.LauncherWidth,Mode=OneWay}"
        Topmost="True" Visibility="Hidden" d:Visibility="Visible"
        WindowStyle="None" AllowsTransparency="True" SizeToContent="Height"
        FocusManager.FocusedElement="{Binding ElementName=QueryBox}"
        TextOptions.TextRenderingMode="ClearType"
        Closing="Window_Closing" Deactivated="Window_Deactivated">
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{x:Static local:App.CloseLauncherCommand}"/>
        <KeyBinding Key="Return" Command="{Binding ViewModel.InvokeSelectedCommand}"/>
        <KeyBinding Key="Up" Command="{Binding ViewModel.SelectPrevCommand}"/>
        <KeyBinding Key="Down" Command="{Binding ViewModel.SelectNextCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Border Background="{DynamicResource LauncherBorderBrush}"
                Padding="{DynamicResource LauncherBorderThickness}"
                CornerRadius="{DynamicResource LauncherBorderRadius}"
                MouseDown="Border_MouseDown">
            <Border Background="{DynamicResource LauncherContentBrush}"
                    Padding="{DynamicResource LauncherPaddingThickness}"
                    CornerRadius="{DynamicResource LauncherContentCornerRadius}">
                <StackPanel>
                    <Border Background="{DynamicResource QueryBoxContentBrush}"
                            Padding="{DynamicResource QueryBoxPaddingThickness}"
                            CornerRadius="{DynamicResource QueryBoxCornerRadius}">
                        <TextBox Name="QueryBox"
                                 BorderThickness="0" Background="Transparent"
                                 Text="{Binding ViewModel.QueryText,UpdateSourceTrigger=PropertyChanged}"
                                 FontSize="{DynamicResource QueryBoxTextSize}"
                                 Foreground="{DynamicResource QueryBoxTextBrush}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Up" Command="{Binding ViewModel.SelectPrevCommand}"/>
                                <KeyBinding Key="Down" Command="{Binding ViewModel.SelectNextCommand}"/>
                            </TextBox.InputBindings>
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="TextChanged">
                                    <behaviors:InvokeCommandAction Command="{Binding ViewModel.QueryCommand}"/>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                            <TextBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
                                    <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
                                    <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
                                    <Separator/>
                                    <MenuItem Header="Settings" Command="{x:Static local:App.ShowLauncherSettingsCommand}"/>
                                    <MenuItem Header="Exit" Command="{x:Static local:App.ShutdownCommand}"/>
                                </ContextMenu>
                            </TextBox.ContextMenu>
                        </TextBox>
                    </Border>
                    <condition:IfControl Condition="{Binding ViewModel.HasQueryResult}">
                        <condition:IfControl.Then>
                            <ListBox Margin="0 5 0 0" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ItemsSource="{Binding ViewModel.QueryResults}" d:ItemsSource="{d:SampleData ItemCount=5}"
                                     SelectedItem="{Binding ViewModel.SelectedQueryResult,Mode=OneWayToSource}"
                                     SelectedIndex="{Binding ViewModel.SelectedQueryResultIndex}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="models:QueryResultModel">
                                        <Border Padding="{DynamicResource QueryResultPaddingThickness}">
                                            <Border.Resources>
                                                <wpfproxy:BindingProxy x:Key="Proxy" Data="{Binding}"/>
                                            </Border.Resources>
                                            <Button Command="{Binding InvokeCommand}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                                    </ControlTemplate>
                                                </Button.Template>

                                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="8"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border Width="{DynamicResource QueryResultImageSize}"
                                                            Height="{DynamicResource QueryResultImageSize}"
                                                            CornerRadius="{DynamicResource QueryResultIconCornerRadius}">
                                                        <Border.Background>
                                                            <ImageBrush ImageSource="{Binding Source={StaticResource Proxy}, Path=Data.Icon}"/>
                                                        </Border.Background>
                                                    </Border>

                                                    <Grid Grid.Column="2">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>
                                                        <TextBlock Text="{Binding Title}"
                                                                   FontSize="{DynamicResource QueryResultTitleTextSize}"
                                                                   Foreground="{DynamicResource QueryResultTitleTextBrush}"/>
                                                        <TextBlock Grid.Row="1"
                                                                   TextTrimming="WordEllipsis"
                                                                   Text="{Binding Description}"
                                                                   FontSize="{DynamicResource QueryResultDescriptionTextSize}"
                                                                   Foreground="{DynamicResource QueryResultDescriptionTextBrush}"/>
                                                    </Grid>
                                                </Grid>
                                            </Button>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Margin" Value="0 1 0 0" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border x:Name="Bd"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            CornerRadius="{DynamicResource QueryResultCornerRadius}"
                                                            SnapsToDevicePixels="True">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Bd" Property="Background"
                                                                    Value="{DynamicResource QueryResultHoverBackgroundBrush}" />
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="Bd" Property="Background"
                                                                    Value="{DynamicResource QueryResultActiveBackgroundBrush}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </condition:IfControl.Then>
                    </condition:IfControl>
                </StackPanel>
            </Border>
        </Border>
        <tb:TaskbarIcon Visibility="Visible"
                        ToolTipText="CurvaLauncher"
                        ToolTip="CurvaLauncher"
                        IconSource="Assets/Icon32.ico"
                        LeftClickCommand="{x:Static local:App.ShowLauncherCommand}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show Launcher" Command="{x:Static local:App.ShowLauncherCommand}"/>
                    <Separator/>
                    <MenuItem Header="Settings" Command="{x:Static local:App.ShowLauncherSettingsCommand}"/>
                    <MenuItem Header="Exit" Command="{x:Static local:App.ShutdownCommand}"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</Window>
