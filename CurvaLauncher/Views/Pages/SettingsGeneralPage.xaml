<ui:UiPage x:Class="CurvaLauncher.Views.Pages.SettingsGeneralPage"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
           xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
           xmlns:local="clr-namespace:CurvaLauncher.Views.Pages"
           xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
           mc:Ignorable="d" 
           d:DesignHeight="450" d:DesignWidth="800"
           d:Background="White"
           Title="SettingsGeneralPage">

    <ui:UiPage.Resources>
        <BooleanToVisibilityConverter x:Key="bool2visibility"/>
    </ui:UiPage.Resources>

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding CheckStartupStatusCommand}"/>
            <behaviors:InvokeCommandAction Command="{Binding CheckHotkeyStatusCommand}"/>
        </behaviors:EventTrigger>
        <behaviors:EventTrigger EventName="Activated">
            <behaviors:InvokeCommandAction Command="{Binding CheckStartupStatusCommand}"/>
            <behaviors:InvokeCommandAction Command="{Binding CheckHotkeyStatusCommand}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

    <Grid>
        <StackPanel Margin="15">

            <StackPanel Margin="0 0 0 10">
                <StackPanel Orientation="Horizontal">

                    <Label Content="Launcher hotkey:"
                            Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>

                    <TextBlock Grid.Column="2" Margin="10 0 0 0"
                                Text="[ Not registered ]"
                                Visibility="{Binding ViewModel.HotkeyNotRegistered,Converter={StaticResource bool2visibility}}"/>

                    <TextBlock Grid.Column="3" Margin="10 0 0 0"
                                Text="[ Invalid hotkey ]"
                                Visibility="{Binding ViewModel.HotkeyNotValid,Converter={StaticResource bool2visibility}}"/>
                </StackPanel>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ui:TextBox VerticalContentAlignment="Center"
                                Text="{Binding ConfigService.Config.LauncherHotkey,UpdateSourceTrigger=PropertyChanged}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="TextChanged">
                                <behaviors:InvokeCommandAction Command="{Binding CheckHotkeyStatusCommand}"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </ui:TextBox>

                    <ui:Button Grid.Column="1" Content="Apply" Margin="10 0 0 0"
                                VerticalAlignment="Stretch"
                                Visibility="{Binding ViewModel.ShowHotkeyApplyButton,Converter={StaticResource bool2visibility}}"
                                Command="{Binding ApplyHotkeyCommand}"/>
                </Grid>
            </StackPanel>

            <StackPanel Margin="0 0 0 10">
                <Label Content="Launcher width:"
                       Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                <TextBox VerticalContentAlignment="Center"
                         Text="{Binding ConfigService.Config.LauncherWidth}"/>
            </StackPanel>

            <StackPanel Margin="0 0 0 10">
                <Label Content="Launcher result view count:"
                       Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                <TextBox VerticalContentAlignment="Center"
                         Text="{Binding ConfigService.Config.LauncherResultViewCount}"/>
            </StackPanel>

            <StackPanel Margin="0 0 0 10">
                <Label Content="Query result icon size:"
                       Foreground="{DynamicResource TextFillColorPrimaryBrush}"/>
                <TextBox VerticalContentAlignment="Center"
                         Text="{Binding ConfigService.Config.QueryResultIconSize}"/>
            </StackPanel>

            <CheckBox Margin="0 15 0 0"
                      Content="Starts with windows"
                      IsChecked="{Binding ConfigService.Config.StartsWithWindows}" >

                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="Checked">
                        <behaviors:InvokeCommandAction Command="{Binding SwitchOnStartupCommand}"/>
                    </behaviors:EventTrigger>
                    <behaviors:EventTrigger EventName="Unchecked">
                        <behaviors:InvokeCommandAction Command="{Binding SwitchOffStartupCommand}"/>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>

            </CheckBox>

            <CheckBox Margin="0 0 0 0"
                              Content="Keep launcher when focus is lost"
                              IsChecked="{Binding ConfigService.Config.KeepLauncherWhenFocusLost}"/>
        </StackPanel>
    </Grid>
</ui:UiPage>
