<ui:UiPage x:Class="CurvaLauncher.Views.Pages.SettingsGeneralPage"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
           xmlns:root="clr-namespace:CurvaLauncher"
           xmlns:local="clr-namespace:CurvaLauncher.Views.Pages"
           xmlns:models="clr-namespace:CurvaLauncher.Models"
           xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
           xmlns:converters="clr-namespace:CurvaLauncher.Converters"
           xmlns:utils="clr-namespace:CurvaLauncher.Utilities"
           mc:Ignorable="d"
           d:DesignHeight="450" d:DesignWidth="800"
           d:Background="White"
           d:DataContext="{d:DesignInstance Type=local:SettingsGeneralPage,IsDesignTimeCreatable=False}"
           Title="SettingsGeneralPage">

    <ui:UiPage.Resources>
        <BooleanToVisibilityConverter x:Key="bool2visibility"/>
        <converters:EnumConverter x:Key="enum2str"/>
    </ui:UiPage.Resources>

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding CheckStartupStatusCommand}"/>
            <behaviors:InvokeCommandAction Command="{Binding CheckHotkeyStatusCommand}"/>
        </behaviors:EventTrigger>
        <behaviors:EventTrigger EventName="Activated">
            <behaviors:InvokeCommandAction Command="{Binding CheckStartupStatusCommand}"/>
            <behaviors:InvokeCommandAction Command="{Binding CheckHotkeyStatusCommand}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

    <Grid>
        <ScrollViewer Focusable="False"
                      utils:ScrollViewerUtils.EnableSmoothScrolling="True">
            <StackPanel Margin="15">
                <StackPanel Margin="0 0 0 20">
                    <StackPanel Orientation="Horizontal">
                        <Label FontSize="14" 
                               Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                            <TextBlock>
                            <Run Text="{DynamicResource StrLauncherHotkey}"/>
                            <Run Text=":"/>
                            </TextBlock>
                        </Label>

                        <TextBlock Grid.Column="2" Margin="10 0 0 0"
                                Visibility="{Binding ViewModel.HotkeyNotRegistered,Converter={StaticResource bool2visibility}}">
                            <Run Text="["/>
                            <Run Text="{DynamicResource StrNotRegistered}"/>
                            <Run Text="]"/>
                        </TextBlock>

                        <TextBlock Grid.Column="3" Margin="10 0 0 0"
                                Visibility="{Binding ViewModel.HotkeyNotValid,Converter={StaticResource bool2visibility}}">
                            <Run Text="["/>
                            <Run Text="{DynamicResource StrInvalidHotkey}"/>
                            <Run Text="]"/>
                        </TextBlock>
                    </StackPanel>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ui:TextBox VerticalContentAlignment="Center"
                                Text="{Binding ConfigService.Config.LauncherHotkey,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="TextChanged">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckHotkeyStatusCommand}"/>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ui:TextBox>

                        <ui:Button Grid.Column="1" Margin="10 0 0 0"
                               VerticalAlignment="Stretch"
                               Content="{DynamicResource StrApply}"
                               Visibility="{Binding ViewModel.ShowHotkeyApplyButton,Converter={StaticResource bool2visibility}}"
                               Command="{Binding ApplyHotkeyCommand}"/>
                    </Grid>
                </StackPanel>

                <StackPanel Margin="0 0 0 20">
                    <Label FontSize="14" 
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                        <TextBlock>
                        <Run Text="{DynamicResource StrLauncherWidth}"/>
                        <Run Text=":"/>
                        </TextBlock>
                    </Label>
                    <TextBox VerticalContentAlignment="Center"
                         Text="{Binding ConfigService.Config.LauncherWidth}"/>
                </StackPanel>

                <StackPanel Margin="0 0 0 20">
                    <Label FontSize="14"
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                        <TextBlock>
                        <Run Text="{DynamicResource StrQueryResultViewCount}"/>
                        <Run Text=":"/>
                        </TextBlock>
                    </Label>
                    <TextBox VerticalContentAlignment="Center"
                         Text="{Binding ConfigService.Config.LauncherResultViewCount}"/>
                </StackPanel>

                <StackPanel Margin="0 0 0 20">
                    <Label FontSize="14" 
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                        <TextBlock>
                        <Run Text="{DynamicResource StrQueryResultIconSize}"/>
                        <Run Text=":"/>
                        </TextBlock>
                    </Label>
                    <TextBox VerticalContentAlignment="Center"
                         Text="{Binding ConfigService.Config.QueryResultIconSize}"/>
                </StackPanel>

                <StackPanel Margin="0 0 0 20">
                    <Label FontSize="14"
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                        <TextBlock>
                        <Run Text="{DynamicResource StrTheme}"/>
                        <Run Text=":"/>
                        </TextBlock>
                    </Label>
                    <ComboBox VerticalContentAlignment="Center"
                          ItemsSource="{x:Static root:AppConfig.AvailableThemes}"
                          SelectedItem="{Binding ConfigService.Config.Theme}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="SelectionChanged">
                                <behaviors:InvokeCommandAction Command="{Binding ThemeService.ApplyThemeCommand}"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>

                <StackPanel Margin="0 0 0 20">
                    <Label FontSize="14" 
                           Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                        <TextBlock>
                            <Run Text="{DynamicResource StrLanguage}"/>
                            <Run Text=":"/>
                        </TextBlock>
                    </Label>
                    <ComboBox VerticalContentAlignment="Center"
                          ItemsSource="{x:Static root:AppConfig.AvailableLanguages}"
                          SelectedItem="{Binding ConfigService.Config.Language}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="models:AppLanguage">
                                <TextBlock Text="{Binding Converter={StaticResource enum2str}}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="SelectionChanged">
                                <behaviors:InvokeCommandAction Command="{Binding I18nService.ApplyLanguageCommand}"/>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </ComboBox>
                </StackPanel>

                <CheckBox Margin="0 5 0 0"
                      IsChecked="{Binding ConfigService.Config.StartsWithWindows}">

                    <TextBlock>
                        <Run Text="{DynamicResource StrStartsWithWindows}"/>
                        <Run Text=":"/>
                    </TextBlock>

                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="Checked">
                            <behaviors:InvokeCommandAction Command="{Binding SwitchOnStartupCommand}"/>
                        </behaviors:EventTrigger>
                        <behaviors:EventTrigger EventName="Unchecked">
                            <behaviors:InvokeCommandAction Command="{Binding SwitchOffStartupCommand}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>

                </CheckBox>

                <CheckBox Margin="0 0 0 0"
                      IsChecked="{Binding ConfigService.Config.KeepLauncherWhenFocusLost}">
                    <TextBlock>
                    <Run Text="{DynamicResource StrKeepLauncherWhenFocusIsLost}"/>
                    <Run Text=":"/>
                    </TextBlock>
                </CheckBox>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</ui:UiPage>
